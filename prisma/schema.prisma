generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  key           Int        @id @default(autoincrement())
  email         String
  name          String
  domain        String?
  type          String?
  userGroupKey  Int?       @map("user_group_key")
  Proposal      Proposal[]
  documentation UserDoc[]
  group         UserGroup? @relation(fields: [userGroupKey], references: [key])

  @@map("users")
}

model UserGroup {
  key   Int    @id @default(autoincrement())
  name  String
  users User[]

  @@map("user_groups")
}

model UserDoc {
  key     String @id
  userKey Int    @map("user_key")
  User    User   @relation(fields: [userKey], references: [key])

  @@map("user_docs")
}

model GuidingPrinciple {
  key      Int        @id @default(autoincrement())
  name     String
  Proposal Proposal[] @relation("GuidingPrincipleToProposal")

  @@map("guiding_principles")
}

model Doc {
  key         String   @id
  proposalKey Int      @map("proposal_key")
  Proposal    Proposal @relation(fields: [proposalKey], references: [key])

  @@map("docs")
}

model Proposal {
  key               Int                @id @default(autoincrement())
  userKey           Int                @map("user_key")
  title             String
  code              String?
  description       String?
  justification     String?
  /// path to a file
  template          String?
  /// True if the proposal is already checked
  checked           Boolean            @default(false)
  documentation     Doc[]
  user              User               @relation(fields: [userKey], references: [key])
  guidingPrinciples GuidingPrinciple[] @relation("GuidingPrincipleToProposal")

  @@map("proposals")
}
